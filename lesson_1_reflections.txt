How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   

much easier that looking through large code files side by side,
 the sections made it clear to do the comparison in small chunks
 but it still took a little while to spot the typo.




How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  
can easily undo changes and restore back to old one without having to keep recoding. 
can also easily revert back. 
reduces errors because sometime we can remember everything that has been changed.

 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

 
manually promotes ssaving at points where code makes sense
however auto can make up for human error of forgetting to save the code

   


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

 

making it easier to track files that are related to each other.
otherwise you woud have to find the first one
then search for the others that were changed at the same time
 
   

How can you use the commands git log and git diff to view the history of files?

    



How might using version control make you more confident to make changes that
could break something?

    

Much more confident as you know you can easily go back to a working version 
without worrying about breaking the code and spending a lot of time to debug it.



Now that you have your workspace set up, what do you want to try using Git for?

   

storing my projects in a good order and building my personal app project


